<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.userMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.user">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="Nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="HeadUrl" jdbcType="VARCHAR" property="headurl" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="registrationTime" jdbcType="TIMESTAMP" property="registrationtime" />
    <result column="userType" jdbcType="INTEGER" property="usertype" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, Nickname, HeadUrl, sex, registrationTime, userType
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.entity.user">
    insert into user (id, account, password, 
      Nickname, HeadUrl, sex, 
      registrationTime, userType)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{headurl,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{registrationtime,jdbcType=TIMESTAMP}, #{usertype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.user">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        Nickname,
      </if>
      <if test="headurl != null">
        HeadUrl,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="registrationtime != null">
        registrationTime,
      </if>
      <if test="usertype != null">
        userType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headurl != null">
        #{headurl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="registrationtime != null">
        #{registrationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.user">
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        Nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headurl != null">
        HeadUrl = #{headurl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="registrationtime != null">
        registrationTime = #{registrationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="usertype != null">
        userType = #{usertype,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.user">
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      Nickname = #{nickname,jdbcType=VARCHAR},
      HeadUrl = #{headurl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      registrationTime = #{registrationtime,jdbcType=TIMESTAMP},
      userType = #{usertype,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getAllUser" parameterType="com.example.dto.currentPage"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
</mapper>